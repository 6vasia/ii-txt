Вундерскрипты "переносной фидотвитер".
Версия страшная.

Что это и как это работает?
- Что такое ii- здесь не объясняется. Будем считать, что уже знакомы очно.


Эта штука проецирует ii-сеть на файловую систему, в виде текстовых файлов и обычных каталогов.
Просто добавь midnight commander.


== Каталоги и файлы ==

Каталоги - названия эх. В них файлы - сообщения по порядку. Большой файл 0000.txt - это все сообщения списком.
Ходишь, читаешь, хоть стопкой, хоть в ряд.


== Начало ==

Два запускаемых скрипта: get.sh и send.sh, первый получает файлы, второй - отправляет.
Для получения нужен только веб-адрес ноды, для отправки - нужна ещё строка авторизации, которую можно получить на вебсайте.

формат конфига, построчно

строка-авторизации
адрес-сервера-с-завершающим-слешем
эха
эха
эха

Добиваешь нужные эхи для подписки, и всё. Полфидо сделано.

С сообщениями можно измываться, как угодно, всё равно после каждого get.sh они перестраиваются заново.


== Пишите письма ==

Чтобы написать новое письмо, нужно создать в нужном каталоге файл, содержащий в себе подстроку new. 
Можно его так и назвать: new

Письма бывают двух видов:

* простое письмо: первая строка поле кому, вторая - сабж, третья пустая, дальше текст.

* ответ: первая строка msgid сообщения, на которое отвечаешь, вторая - кому, третья сабж, четвёртая пустая, дальше текст

то есть, для ответа достаточно скопировать xx.txt в xx.new, удалить строки addr:, msgto: и в тексте отцитировать нужное

После написания письма, и проверки того, что всё правильно, можно его отправить (если прописан хэш) командой send.sh


== Эти ужасные питон-скрипты ==

Они действительно ужасные.

wf.py - с помощью http скачивает сообщения с ноды
reparse.py - по базе, скачанной wf, перестраивает все .txt-файлы

findnew.py - ищет new-файлы в подписанных эхах и переносит их в .out с именем XX.out
mkt.py - запаковывает out-файлы в out.toss, и переименовывает XX.out в XX.outmsg
psh.py - отправляет .toss-файлы, и затем удалёт их.
(никаких проверок сейчас не производится. ушло ли, ушло ли туда - это уже можно узнать только после get.sh)

== Аутбаунд ==

В .out сохраняются все отправленные сообщения. Если сообщение отправилось не так или не туда,
можно переименовать XX.outmsg в XX.out и заново запустить send.sh
